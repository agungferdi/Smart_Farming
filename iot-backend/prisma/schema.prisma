generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model SensorData {
  id               BigInt     @id @default(autoincrement())
  /// Temperature reading from DHT11 sensor in Celsius
  temperature      Decimal    @db.Decimal(5, 2)
  /// Humidity reading from DHT11 sensor in percentage
  humidity         Decimal    @db.Decimal(5, 2)
  /// Soil moisture reading in percentage (0-100%)
  soil_moisture    Int
  /// Soil temperature reading from DS18B20 sensor in Celsius
  soil_temperature Decimal?   @db.Decimal(5, 2)
  /// Rain detection status from MH-RD sensor
  rain_detected    Boolean
  /// Water level classification: "Low", "Medium", or "High"
  water_level      String
  created_at       DateTime?  @default(now()) @db.Timestamptz(6)
  relayLogs        RelayLog[]

  @@index([created_at(sort: Desc)], map: "idx_sensor_data_created_at")
  @@index([soil_moisture], map: "idx_sensor_data_soil_moisture")
  @@index([soil_temperature], map: "idx_sensor_data_soil_temperature")
  @@map("sensor-data")
}

model RelayLog {
  id                BigInt     @id @default(autoincrement())
  /// Relay status: true = ON (pump active), false = OFF (pump inactive)
  relay_status      Boolean
  /// Reason for relay state change
  trigger_reason    String
  /// Foreign key to sensor data reading
  sensor_reading_id BigInt
  created_at        DateTime?  @default(now()) @db.Timestamptz(6)
  sensorData        SensorData @relation(fields: [sensor_reading_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_sensor_reading")

  @@index([created_at(sort: Desc)], map: "idx_relay_log_created_at")
  @@index([relay_status], map: "idx_relay_log_status")
  @@index([sensor_reading_id], map: "idx_relay_log_sensor_reading")
  @@map("relay-log")
}
